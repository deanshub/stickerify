module.exports = {
  env: {
    browser: true,
    node: true,
    'jest/globals': true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  plugins: [
    '@typescript-eslint',
    '@typescript-eslint/tslint',
    'sonarjs',
    'prettier',
    'jest',
    'import',
    'react',
    'wix-style-react',
    'wix-custom-rules',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:jest/recommended',
    'plugin:import/typescript',
    'plugin:react/recommended',
  ],
  overrides: [
    {
      files: ['*.spec.ts', '*.driver.ts', '*.builder.ts', '*.e2e.ts'],
      rules: {
        'sonarjs/no-duplicate-string': 'off',
        'sonarjs/no-identical-functions': 'off',
        'no-console': 'off',
      },
    },
    {
      files: ['test/**/*.*'],
      rules: {
        'no-console': 'off',
      },
    },
    {
      files: ['*.d.ts'],
      rules: {
        'import/no-default-export': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        'wix-custom-rules/wixstores-file-names': 'off',
      },
    },
    {
      files: ['dev-server.ts'],
      rules: {
        'wix-custom-rules/wixstores-file-names': 'off',
        'import/no-default-export': 'off',
      },
    },
  ],
  rules: {
    '@typescript-eslint/no-untyped-public-signature': [
      'error',
      {
        allowedMethods: [
          'componentWillMount',
          'componentDidMount',
          'componentDidUpdate',
          'componentWillUnmount',
          'componentDidCatch',
          'componentWillReceiveProps',
          'componentWillUpdate',
          'getSnapshotBeforeUpdate',
          'shouldComponentUpdate',
          'render',
          'getDerivedStateFromProps',
        ],
      },
    ],
    'no-unused-expressions': [
      'error',
      { allowShortCircuit: true, allowTernary: true },
    ],
    '@typescript-eslint/unbound-method': ['error', { ignoreStatic: true }],
    'wix-custom-rules/no-wallaby-file-only': 'error',
    'wix-custom-rules/wixstores-file-names': 'error',
    'jest/no-test-prefixes': 'off',
    'jest/no-truthy-falsy': 'error',
    'jest/no-duplicate-hooks': 'error',
    'jest/no-expect-resolves': 'error',
    'no-restricted-imports': [
      'error',
      {
        paths: [
          'wix-style-react',
          '@wix/native-components-infra',
          '@wix/native-components-infra/dist/src',
          '@wix/native-components-infra/dist/es/src',
        ],
      },
    ],
    'wix-style-react/no-full-wsr-lib': 'error',
    'react/prop-types': 'off',
    'react/jsx-no-bind': 'error',
    'import/no-duplicates': 'error',
    'import/no-deprecated': 'error',
    'prefer-named-capture-group': 'error',
    'no-extra-boolean-cast': 'error',
    'no-duplicate-case': 'error',
    'no-shadow': 'error',
    'no-empty-character-class': 'error',
    'no-nested-ternary': 'error',
    'require-await': 'error',
    'no-with': 'error',
    'no-proto': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'prettier/prettier': 'error',
    eqeqeq: 'error',
    'no-new-wrappers': 'error',
    'valid-typeof': 'error',
    '@typescript-eslint/no-unnecessary-type-arguments': 'error',
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/no-parameter-properties': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/await-thenable': 'error',
    '@typescript-eslint/class-name-casing': 'error',
    '@typescript-eslint/explicit-member-accessibility': [
      'error',
      {
        overrides: {
          constructors: 'off',
        },
      },
    ],
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/prefer-readonly': 'error',
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-extraneous-class': 'error',
    '@typescript-eslint/no-for-in-array': 'error',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': 'error',
    '@typescript-eslint/no-non-null-assertion': 'error',
    '@typescript-eslint/no-unnecessary-qualifier': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-function-type': 'error',
    '@typescript-eslint/restrict-plus-operands': 'error',
    '@typescript-eslint/type-annotation-spacing': 'off',
    '@typescript-eslint/no-useless-constructor': 'error',
    'max-lines': [
      'error',
      { max: 1000, skipBlankLines: true, skipComments: true },
    ],
    'arrow-parens': ['off', 'as-needed'],
    'constructor-super': 'error',
    curly: 'error',
    'default-case': 'off',
    'dot-notation': 'error',
    'eol-last': 'off',
    'linebreak-style': 'off',
    'new-parens': 'off',
    'newline-per-chained-call': 'off',
    'no-bitwise': 'error',
    'no-caller': 'error',
    'no-cond-assign': 'error',
    'no-console': [
      'error',
      {
        allow: ['warn', 'error'],
      },
    ],
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-empty': 'error',
    'no-eval': 'error',
    'no-extra-semi': 'off',
    'no-fallthrough': 'error',
    'no-invalid-regexp': 'error',
    'no-invalid-this': 'off',
    'no-irregular-whitespace': 'error',
    'no-multiple-empty-lines': 'off',
    'no-regex-spaces': 'error',
    'no-return-await': 'error',
    'no-sequences': 'error',
    'no-sparse-arrays': 'error',
    'no-template-curly-in-string': 'error',
    'no-throw-literal': 'error',
    'no-undef-init': 'error',
    'no-unsafe-finally': 'error',
    'no-var': 'error',
    'object-shorthand': 'error',
    'prefer-const': 'error',
    'prefer-object-spread': 'error',
    'prefer-template': 'error',
    'quote-props': 'off',
    radix: 'error',
    'prefer-arrow-callback': 'error',
    'space-before-function-paren': 'off',
    'use-isnan': 'error',
    // "sonarjs/prefer-immediate-return": "error", //type check in sonarTS
    'sonarjs/no-all-duplicated-branches': 'error', //no type check
    // "sonarjs/no-element-overwrite": "error", //type check in sonarTS
    'sonarjs/no-identical-conditions': 'error', //no type check
    'sonarjs/no-identical-expressions': 'error', //no type check
    // "sonarjs/no-use-of-empty-return-value": "error", //type check in sonarTS
    'sonarjs/cognitive-complexity': 'error', //no type check
    'sonarjs/max-switch-cases': 'error', //no type check
    'sonarjs/no-collapsible-if': 'error', //no type check
    'sonarjs/no-duplicate-string': 'error', //no type check
    'sonarjs/no-duplicated-branches': 'error', //no type check
    'sonarjs/no-identical-functions': 'error', //no type check    //let's disable this in tests
    'sonarjs/no-inverted-boolean-check': 'error', //no type check
    'sonarjs/no-redundant-boolean': 'error', //no type check
    'sonarjs/no-small-switch': 'error', //no type check
    'sonarjs/no-useless-catch': 'error', //no type check
    'sonarjs/prefer-while': 'error', //not in sonarTS
    '@typescript-eslint/tslint/config': [
      'error',
      {
        rulesDirectory: [
          'node_modules/tslint-mobx/dist/src',
          'node_modules/tslint-consistent-codestyle/rules',
          'node_modules/tslint-sonarts/lib/rules',
        ],
        rules: {
          //tslint-consistent-codestyle
          'prefer-const-enum': true,
          'no-accessor-recursion': true,
          'no-return-undefined': true,
          'no-static-this': true,
          //not yet in typescript-eslint:
          'prefer-method-signature': true,
          'switch-final-break': true, //https://github.com/eslint/eslint/pull/12094
          'no-dynamic-delete': true,
          encoding: true,
          //mobx tslint
          'mobx-react-no-empty-inject': true,
          'mobx-react-no-unused-inject': true,
          //sonarTS (not in sonarjs):
          'prefer-promise-shorthand': true,
          'prefer-default-last': true,
          'prefer-optional': true,
          'prefer-type-guard': true,
          'parameters-max-number': true,
          'max-union-size': true,
          'arguments-order': true,
          'bool-param-default': true,
          'consecutive-overloads': true,
          'no-accessor-field-mismatch': true,
          'no-alphabetical-sort': true,
          'no-array-delete': true,
          'no-case-with-or': true,
          'no-collection-size-mischeck': true,
          'no-dead-store': true,
          'no-empty-array': true,
          'no-return-type-any': true,
          'no-same-line-conditional': true,
          'no-redundant-parentheses': true,
          'no-redundant-jump': true,
          'no-nested-template-literals': true,
          'no-nested-switch': true,
          'no-multiline-string-literals': true,
          'no-misspelled-operator': true,
          'no-misleading-array-reverse': true,
          'no-invariant-return': true,
          'no-invalid-await': true,
          'no-in-misuse': true,
          'no-gratuitous-expressions': true,
          'no-unthrown-error': true,
          'no-unused-array': true,
          'no-self-assignment': true,
          'no-useless-cast': true,
          'no-commented-code': true,
          'no-try-promise': true,
          'no-unconditional-jump': true,
          'no-statements-same-line': true,
          'no-variable-usage-before-declaration': true,
          'no-useless-increment': true,
          'no-ignored-return': true,
          'no-unenclosed-multiline-block': true,
          'no-ignored-initial-value': true,
          'no-hardcoded-credentials': true,
          'no-empty-destructuring': true,
          'no-duplicate-in-composite': true,
          'no-extra-semicolon': true,
          'no-undefined-argument': true,
          'no-useless-intersection': true,
          'prefer-immediate-return': true,
          'no-use-of-empty-return-value': true,
          'no-element-overwrite': true,
          'use-type-alias': true,
        },
      },
    ],
  },
};
